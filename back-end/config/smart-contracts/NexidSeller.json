{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract NexidToken",
          "name": "nexidToken",
          "type": "address"
        },
        {
          "internalType": "contract NexidNFT",
          "name": "nexidNFT",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "price",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "FundsWithdrawn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ItemPurchased",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "nexidNFT",
      "outputs": [
        {
          "internalType": "contract NexidNFT",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nexidToken",
      "outputs": [
        {
          "internalType": "contract NexidToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "price",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "purchase",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "10": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Context.sol",
    "11": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Counters.sol",
    "12": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Strings.sol",
    "13": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/introspection/ERC165.sol",
    "14": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/introspection/IERC165.sol",
    "15": "contracts/NexidNFT.sol",
    "16": "contracts/NexidSeller.sol",
    "17": "contracts/NexidToken.sol",
    "18": "interfaces/INFTSeller.sol",
    "2": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/ERC721.sol",
    "3": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721.sol",
    "4": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/IERC721Receiver.sol",
    "5": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/extensions/ERC721Enumerable.sol",
    "6": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/extensions/ERC721URIStorage.sol",
    "7": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/extensions/IERC721Enumerable.sol",
    "8": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/token/ERC721/extensions/IERC721Metadata.sol",
    "9": "/home/pogginicolo98/.brownie/packages/OpenZeppelin/openzeppelin-contracts@4.0.0/contracts/utils/Address.sol"
  },
  "ast": {
    "absolutePath": "contracts/NexidSeller.sol",
    "exportedSymbols": {
      "Address": [
        2873
      ],
      "Context": [
        2416
      ],
      "Counters": [
        962
      ],
      "ERC165": [
        3100
      ],
      "ERC20": [
        1463
      ],
      "ERC721": [
        2284
      ],
      "ERC721Enumerable": [
        773
      ],
      "ERC721URIStorage": [
        901
      ],
      "IERC165": [
        3112
      ],
      "IERC20": [
        2393
      ],
      "IERC721": [
        2532
      ],
      "IERC721Enumerable": [
        2315
      ],
      "IERC721Metadata": [
        2577
      ],
      "IERC721Receiver": [
        2550
      ],
      "INFTSeller": [
        435
      ],
      "NFTSeller": [
        210
      ],
      "NexidNFT": [
        381
      ],
      "NexidSeller": [
        231
      ],
      "NexidToken": [
        405
      ],
      "Strings": [
        3076
      ]
    },
    "id": 232,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:23:16"
      },
      {
        "absolutePath": "interfaces/INFTSeller.sol",
        "file": "../interfaces/INFTSeller.sol",
        "id": 2,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 436,
        "src": "57:38:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/NexidToken.sol",
        "file": "./NexidToken.sol",
        "id": 3,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 406,
        "src": "96:26:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "contracts/NexidNFT.sol",
        "file": "./NexidNFT.sol",
        "id": 4,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 232,
        "sourceUnit": 382,
        "src": "123:24:16",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 6,
              "name": "INFTSeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 435,
              "src": "289:10:16"
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "289:10:16"
          }
        ],
        "canonicalName": "NFTSeller",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 5,
          "nodeType": "StructuredDocumentation",
          "src": "150:107:16",
          "text": " @title The NFT seller\n @notice The NFTSeller allows the sale of ERC721 tokens for ERC20 tokens"
        },
        "fullyImplemented": true,
        "id": 210,
        "linearizedBaseContracts": [
          210,
          435
        ],
        "name": "NFTSeller",
        "nameLocation": "276:9:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 9,
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "320:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "304:21:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 8,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "304:15:16",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "2fb78efe",
            "id": 12,
            "mutability": "mutable",
            "name": "nexidToken",
            "nameLocation": "347:10:16",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "329:28:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NexidToken_$405",
              "typeString": "contract NexidToken"
            },
            "typeName": {
              "id": 11,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 10,
                "name": "NexidToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 405,
                "src": "329:10:16"
              },
              "referencedDeclaration": 405,
              "src": "329:10:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NexidToken_$405",
                "typeString": "contract NexidToken"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "9f21bd02",
            "id": 15,
            "mutability": "mutable",
            "name": "nexidNFT",
            "nameLocation": "377:8:16",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "361:24:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_NexidNFT_$381",
              "typeString": "contract NexidNFT"
            },
            "typeName": {
              "id": 14,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13,
                "name": "NexidNFT",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 381,
                "src": "361:8:16"
              },
              "referencedDeclaration": 381,
              "src": "361:8:16",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_NexidNFT_$381",
                "typeString": "contract NexidNFT"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "a035b1fe",
            "id": 17,
            "mutability": "mutable",
            "name": "price",
            "nameLocation": "404:5:16",
            "nodeType": "VariableDeclaration",
            "scope": 210,
            "src": "389:20:16",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 16,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "389:7:16",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 49,
              "nodeType": "Block",
              "src": "637:114:16",
              "statements": [
                {
                  "expression": {
                    "id": 35,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 29,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "643:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 32,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "659:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 33,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "659:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 31,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "651:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 30,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "651:8:16",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 34,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "651:19:16",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "643:27:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 36,
                  "nodeType": "ExpressionStatement",
                  "src": "643:27:16"
                },
                {
                  "expression": {
                    "id": 39,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 37,
                      "name": "nexidToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12,
                      "src": "676:10:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NexidToken_$405",
                        "typeString": "contract NexidToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 38,
                      "name": "_nexidToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21,
                      "src": "689:11:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NexidToken_$405",
                        "typeString": "contract NexidToken"
                      }
                    },
                    "src": "676:24:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidToken_$405",
                      "typeString": "contract NexidToken"
                    }
                  },
                  "id": 40,
                  "nodeType": "ExpressionStatement",
                  "src": "676:24:16"
                },
                {
                  "expression": {
                    "id": 43,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41,
                      "name": "nexidNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 15,
                      "src": "706:8:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NexidNFT_$381",
                        "typeString": "contract NexidNFT"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42,
                      "name": "_nexidNFT",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 24,
                      "src": "717:9:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_NexidNFT_$381",
                        "typeString": "contract NexidNFT"
                      }
                    },
                    "src": "706:20:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidNFT_$381",
                      "typeString": "contract NexidNFT"
                    }
                  },
                  "id": 44,
                  "nodeType": "ExpressionStatement",
                  "src": "706:20:16"
                },
                {
                  "expression": {
                    "id": 47,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 45,
                      "name": "price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "732:5:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46,
                      "name": "_price",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 26,
                      "src": "740:6:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "732:14:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 48,
                  "nodeType": "ExpressionStatement",
                  "src": "732:14:16"
                }
              ]
            },
            "documentation": {
              "id": 18,
              "nodeType": "StructuredDocumentation",
              "src": "414:148:16",
              "text": " @param _nexidToken NexidToken.sol address\n @param _nexidNFT NexidNFT.sol address\n @param _price NexidNFT priced in NexidToken"
            },
            "id": 50,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 27,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21,
                  "mutability": "mutable",
                  "name": "_nexidToken",
                  "nameLocation": "588:11:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "577:22:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NexidToken_$405",
                    "typeString": "contract NexidToken"
                  },
                  "typeName": {
                    "id": 20,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 19,
                      "name": "NexidToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 405,
                      "src": "577:10:16"
                    },
                    "referencedDeclaration": 405,
                    "src": "577:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidToken_$405",
                      "typeString": "contract NexidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 24,
                  "mutability": "mutable",
                  "name": "_nexidNFT",
                  "nameLocation": "610:9:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "601:18:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NexidNFT_$381",
                    "typeString": "contract NexidNFT"
                  },
                  "typeName": {
                    "id": 23,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 22,
                      "name": "NexidNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 381,
                      "src": "601:8:16"
                    },
                    "referencedDeclaration": 381,
                    "src": "601:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidNFT_$381",
                      "typeString": "contract NexidNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 26,
                  "mutability": "mutable",
                  "name": "_price",
                  "nameLocation": "629:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 50,
                  "src": "621:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 25,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "621:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:60:16"
            },
            "returnParameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "637:0:16"
            },
            "scope": 210,
            "src": "565:186:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              428
            ],
            "body": {
              "id": 94,
              "nodeType": "Block",
              "src": "939:176:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "969:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 68,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "969:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 71,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "989:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTSeller_$210",
                              "typeString": "contract NFTSeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTSeller_$210",
                              "typeString": "contract NFTSeller"
                            }
                          ],
                          "id": 70,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "981:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 69,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "981:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 72,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "981:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73,
                        "name": "price",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 17,
                        "src": "996:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 64,
                        "name": "nexidToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "945:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NexidToken_$405",
                          "typeString": "contract NexidToken"
                        }
                      },
                      "id": 66,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1162,
                      "src": "945:23:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 74,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "945:57:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 75,
                  "nodeType": "ExpressionStatement",
                  "src": "945:57:16"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 81,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1038:4:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_NFTSeller_$210",
                              "typeString": "contract NFTSeller"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_NFTSeller_$210",
                              "typeString": "contract NFTSeller"
                            }
                          ],
                          "id": 80,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1030:7:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 79,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1030:7:16",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 82,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1030:13:16",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 83,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1045:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 84,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1045:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1057:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 76,
                        "name": "nexidNFT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15,
                        "src": "1008:8:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NexidNFT_$381",
                          "typeString": "contract NexidNFT"
                        }
                      },
                      "id": 78,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1825,
                      "src": "1008:21:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 86,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1008:57:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 87,
                  "nodeType": "ExpressionStatement",
                  "src": "1008:57:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 89,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1090:3:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 90,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1090:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 91,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53,
                        "src": "1102:7:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 88,
                      "name": "ItemPurchased",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 415,
                      "src": "1076:13:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 92,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1076:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 93,
                  "nodeType": "EmitStatement",
                  "src": "1071:39:16"
                }
              ]
            },
            "documentation": {
              "id": 51,
              "nodeType": "StructuredDocumentation",
              "src": "755:26:16",
              "text": "@inheritdoc INFTSeller"
            },
            "functionSelector": "efef39a1",
            "id": 95,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 57,
                    "name": "tokenId",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53,
                    "src": "871:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 58,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 56,
                  "name": "onlyNexidNFTAvailable",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 140,
                  "src": "849:21:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "849:30:16"
              },
              {
                "arguments": [],
                "id": 60,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59,
                  "name": "onlyNexidTokenApproved",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 160,
                  "src": "884:22:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "884:24:16"
              },
              {
                "arguments": [],
                "id": 62,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 61,
                  "name": "onlySufficientBalance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 176,
                  "src": "913:21:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "913:23:16"
              }
            ],
            "name": "purchase",
            "nameLocation": "793:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 55,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "836:8:16"
            },
            "parameters": {
              "id": 54,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "810:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 95,
                  "src": "802:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 52,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "802:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "801:17:16"
            },
            "returnParameters": {
              "id": 63,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "939:0:16"
            },
            "scope": 210,
            "src": "784:331:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              434
            ],
            "body": {
              "id": 119,
              "nodeType": "Block",
              "src": "1259:85:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 110,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1285:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 111,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1292:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 107,
                        "name": "nexidToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12,
                        "src": "1265:10:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_NexidToken_$405",
                          "typeString": "contract NexidToken"
                        }
                      },
                      "id": 109,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1076,
                      "src": "1265:19:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1265:34:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 113,
                  "nodeType": "ExpressionStatement",
                  "src": "1265:34:16"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 115,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 9,
                        "src": "1325:5:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "id": 116,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 98,
                        "src": "1332:6:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 114,
                      "name": "FundsWithdrawn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 422,
                      "src": "1310:14:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1310:29:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 118,
                  "nodeType": "EmitStatement",
                  "src": "1305:34:16"
                }
              ]
            },
            "documentation": {
              "id": 96,
              "nodeType": "StructuredDocumentation",
              "src": "1119:26:16",
              "text": "@inheritdoc INFTSeller"
            },
            "functionSelector": "2e1a7d4d",
            "id": 120,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [],
                "id": 102,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 101,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 189,
                  "src": "1212:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1212:11:16"
              },
              {
                "arguments": [
                  {
                    "id": 104,
                    "name": "amount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 98,
                    "src": "1249:6:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 105,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 103,
                  "name": "onlyAvailableBalance",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 209,
                  "src": "1228:20:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "1228:28:16"
              }
            ],
            "name": "withdraw",
            "nameLocation": "1157:8:16",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 100,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1199:8:16"
            },
            "parameters": {
              "id": 99,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 98,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1174:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 120,
                  "src": "1166:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 97,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1166:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1165:16:16"
            },
            "returnParameters": {
              "id": 106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1259:0:16"
            },
            "scope": 210,
            "src": "1148:196:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 139,
              "nodeType": "Block",
              "src": "1539:108:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 134,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 128,
                              "name": "tokenId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 123,
                              "src": "1577:7:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 126,
                              "name": "nexidNFT",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "1560:8:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NexidNFT_$381",
                                "typeString": "contract NexidNFT"
                              }
                            },
                            "id": 127,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ownerOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1610,
                            "src": "1560:16:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view external returns (address)"
                            }
                          },
                          "id": 129,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1560:25:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 132,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "1597:4:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NFTSeller_$210",
                                "typeString": "contract NFTSeller"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_NFTSeller_$210",
                                "typeString": "contract NFTSeller"
                              }
                            ],
                            "id": 131,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1589:7:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 130,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1589:7:16",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1589:13:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1560:42:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e4654206e6f7420666f722073616c652e",
                        "id": 135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1610:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4891193ad9fe65613111a2f71fe3328ff60413e27ddb634480bc1f0f53e2e69e",
                          "typeString": "literal_string \"NFT not for sale.\""
                        },
                        "value": "NFT not for sale."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4891193ad9fe65613111a2f71fe3328ff60413e27ddb634480bc1f0f53e2e69e",
                          "typeString": "literal_string \"NFT not for sale.\""
                        }
                      ],
                      "id": 125,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1545:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 136,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1545:90:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 137,
                  "nodeType": "ExpressionStatement",
                  "src": "1545:90:16"
                },
                {
                  "id": 138,
                  "nodeType": "PlaceholderStatement",
                  "src": "1641:1:16"
                }
              ]
            },
            "documentation": {
              "id": 121,
              "nodeType": "StructuredDocumentation",
              "src": "1348:140:16",
              "text": " @dev Allows execution only if the provided token ID belongs to the NFTSeller\n @param tokenId The token ID of the NFT"
            },
            "id": 140,
            "name": "onlyNexidNFTAvailable",
            "nameLocation": "1500:21:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 123,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "1530:7:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 140,
                  "src": "1522:15:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 122,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1522:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1521:17:16"
            },
            "src": "1491:156:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 159,
              "nodeType": "Block",
              "src": "1777:129:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 154,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 146,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "1819:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "1819:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 150,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "1839:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTSeller_$210",
                                    "typeString": "contract NFTSeller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTSeller_$210",
                                    "typeString": "contract NFTSeller"
                                  }
                                ],
                                "id": 149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1831:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 148,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1831:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 151,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1831:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 144,
                              "name": "nexidToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "1798:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NexidToken_$405",
                                "typeString": "contract NexidToken"
                              }
                            },
                            "id": 145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1094,
                            "src": "1798:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 152,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1798:47:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 153,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "1849:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "1798:56:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e65786964546f6b656e206e6f7420617070726f7665642e",
                        "id": 155,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1862:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6249b828efd7020dc8e6aeee74254a17cb0af36d049e719a26e123eaa3cceac5",
                          "typeString": "literal_string \"NexidToken not approved.\""
                        },
                        "value": "NexidToken not approved."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6249b828efd7020dc8e6aeee74254a17cb0af36d049e719a26e123eaa3cceac5",
                          "typeString": "literal_string \"NexidToken not approved.\""
                        }
                      ],
                      "id": 143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1783:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1783:111:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 157,
                  "nodeType": "ExpressionStatement",
                  "src": "1783:111:16"
                },
                {
                  "id": 158,
                  "nodeType": "PlaceholderStatement",
                  "src": "1900:1:16"
                }
              ]
            },
            "documentation": {
              "id": 141,
              "nodeType": "StructuredDocumentation",
              "src": "1651:89:16",
              "text": "@dev Allows execution only if the NFTSeller is allowed to spend caller's Nexid tokens"
            },
            "id": 160,
            "name": "onlyNexidTokenApproved",
            "nameLocation": "1752:22:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1774:2:16"
            },
            "src": "1743:163:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 175,
              "nodeType": "Block",
              "src": "2027:114:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 170,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 166,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "2069:3:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2069:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 164,
                              "name": "nexidToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2048:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NexidToken_$405",
                                "typeString": "contract NexidToken"
                              }
                            },
                            "id": 165,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1055,
                            "src": "2048:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2048:32:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 169,
                          "name": "price",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "2084:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2048:41:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f7420656e6f756768204e6578696420746f6b656e732e",
                        "id": 171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2097:26:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8a2c2340cd49bfde4b50cae432e0ad38fedc533a40a489dd5d37ba68b5e4e009",
                          "typeString": "literal_string \"Not enough Nexid tokens.\""
                        },
                        "value": "Not enough Nexid tokens."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8a2c2340cd49bfde4b50cae432e0ad38fedc533a40a489dd5d37ba68b5e4e009",
                          "typeString": "literal_string \"Not enough Nexid tokens.\""
                        }
                      ],
                      "id": 163,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2033:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2033:96:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 173,
                  "nodeType": "ExpressionStatement",
                  "src": "2033:96:16"
                },
                {
                  "id": 174,
                  "nodeType": "PlaceholderStatement",
                  "src": "2135:1:16"
                }
              ]
            },
            "documentation": {
              "id": 161,
              "nodeType": "StructuredDocumentation",
              "src": "1910:81:16",
              "text": "@dev Allows execution only if the caller has a sufficient Nexid token balance"
            },
            "id": 176,
            "name": "onlySufficientBalance",
            "nameLocation": "2003:21:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 162,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2024:2:16"
            },
            "src": "1994:147:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 188,
              "nodeType": "Block",
              "src": "2226:102:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 183,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 180,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2247:3:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 181,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2247:10:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 182,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "2261:5:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2247:19:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f6e2e",
                        "id": 184,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2274:36:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                          "typeString": "literal_string \"Only owner can call this function.\""
                        },
                        "value": "Only owner can call this function."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0fcea41e877c4f84237ea6b9061acc9b3fc97555de5ba31615eb7b8cf7110239",
                          "typeString": "literal_string \"Only owner can call this function.\""
                        }
                      ],
                      "id": 179,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2232:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2232:84:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 186,
                  "nodeType": "ExpressionStatement",
                  "src": "2232:84:16"
                },
                {
                  "id": 187,
                  "nodeType": "PlaceholderStatement",
                  "src": "2322:1:16"
                }
              ]
            },
            "documentation": {
              "id": 177,
              "nodeType": "StructuredDocumentation",
              "src": "2145:57:16",
              "text": "@dev Allows execution only if the caller is the owner"
            },
            "id": 189,
            "name": "onlyOwner",
            "nameLocation": "2214:9:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2223:2:16"
            },
            "src": "2205:123:16",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 208,
              "nodeType": "Block",
              "src": "2548:135:16",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 195,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 192,
                          "src": "2569:6:16",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 200,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2608:4:16",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_NFTSeller_$210",
                                    "typeString": "contract NFTSeller"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_NFTSeller_$210",
                                    "typeString": "contract NFTSeller"
                                  }
                                ],
                                "id": 199,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2600:7:16",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 198,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2600:7:16",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 201,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2600:13:16",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 196,
                              "name": "nexidToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 12,
                              "src": "2579:10:16",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_NexidToken_$405",
                                "typeString": "contract NexidToken"
                              }
                            },
                            "id": 197,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1055,
                            "src": "2579:20:16",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2579:35:16",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2569:45:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "54686520616d6f756e7420657863656564732074686520617661696c61626c652062616c616e63652e",
                        "id": 204,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2622:43:16",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ccb5d73c18c3fa50600c1fb0184644152b8d311db432181b96f7abdc4521822c",
                          "typeString": "literal_string \"The amount exceeds the available balance.\""
                        },
                        "value": "The amount exceeds the available balance."
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ccb5d73c18c3fa50600c1fb0184644152b8d311db432181b96f7abdc4521822c",
                          "typeString": "literal_string \"The amount exceeds the available balance.\""
                        }
                      ],
                      "id": 194,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2554:7:16",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 205,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2554:117:16",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 206,
                  "nodeType": "ExpressionStatement",
                  "src": "2554:117:16"
                },
                {
                  "id": 207,
                  "nodeType": "PlaceholderStatement",
                  "src": "2677:1:16"
                }
              ]
            },
            "documentation": {
              "id": 190,
              "nodeType": "StructuredDocumentation",
              "src": "2332:167:16",
              "text": " @dev Allows execution only if the NFTSeller has at least the provided amount of Nexid tokens.\n @param amount The amount provided for withdrawal"
            },
            "id": 209,
            "name": "onlyAvailableBalance",
            "nameLocation": "2511:20:16",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 193,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 192,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2540:6:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 209,
                  "src": "2532:14:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 191,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2532:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2531:16:16"
            },
            "src": "2502:181:16",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 232,
        "src": "258:2427:16",
        "usedErrors": []
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 212,
              "name": "NFTSeller",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 210,
              "src": "2755:9:16"
            },
            "id": 213,
            "nodeType": "InheritanceSpecifier",
            "src": "2755:9:16"
          }
        ],
        "canonicalName": "NexidSeller",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 211,
          "nodeType": "StructuredDocumentation",
          "src": "2688:42:16",
          "text": " @title The seller of Nexid NFTs"
        },
        "fullyImplemented": true,
        "id": 231,
        "linearizedBaseContracts": [
          231,
          210,
          435
        ],
        "name": "NexidSeller",
        "nameLocation": "2740:11:16",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 229,
              "nodeType": "Block",
              "src": "3024:2:16",
              "statements": []
            },
            "id": 230,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 224,
                    "name": "nexidToken",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 216,
                    "src": "2995:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidToken_$405",
                      "typeString": "contract NexidToken"
                    }
                  },
                  {
                    "id": 225,
                    "name": "nexidNFT",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "3007:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidNFT_$381",
                      "typeString": "contract NexidNFT"
                    }
                  },
                  {
                    "id": 226,
                    "name": "price",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 221,
                    "src": "3017:5:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 227,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 223,
                  "name": "NFTSeller",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 210,
                  "src": "2985:9:16"
                },
                "nodeType": "ModifierInvocation",
                "src": "2985:38:16"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "nexidToken",
                  "nameLocation": "2939:10:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2928:21:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NexidToken_$405",
                    "typeString": "contract NexidToken"
                  },
                  "typeName": {
                    "id": 215,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 214,
                      "name": "NexidToken",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 405,
                      "src": "2928:10:16"
                    },
                    "referencedDeclaration": 405,
                    "src": "2928:10:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidToken_$405",
                      "typeString": "contract NexidToken"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 219,
                  "mutability": "mutable",
                  "name": "nexidNFT",
                  "nameLocation": "2960:8:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2951:17:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_NexidNFT_$381",
                    "typeString": "contract NexidNFT"
                  },
                  "typeName": {
                    "id": 218,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 217,
                      "name": "NexidNFT",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 381,
                      "src": "2951:8:16"
                    },
                    "referencedDeclaration": 381,
                    "src": "2951:8:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_NexidNFT_$381",
                      "typeString": "contract NexidNFT"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 221,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2978:5:16",
                  "nodeType": "VariableDeclaration",
                  "scope": 230,
                  "src": "2970:13:16",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 220,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2970:7:16",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2927:57:16"
            },
            "returnParameters": {
              "id": 228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3024:0:16"
            },
            "scope": 231,
            "src": "2916:110:16",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 232,
        "src": "2731:297:16",
        "usedErrors": []
      }
    ],
    "src": "32:2997:16"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516107cb3803806107cb83398101604081905261002f91610089565b600080546001600160a01b03199081163317909155600180546001600160a01b03958616908316179055600280549490931693169290921790556003556100cc565b6001600160a01b038116811461008657600080fd5b50565b60008060006060848603121561009e57600080fd5b83516100a981610071565b60208501519093506100ba81610071565b80925050604084015190509250925092565b6106f0806100db6000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c80632e1a7d4d1461005c5780632fb78efe146100715780639f21bd02146100a1578063a035b1fe146100b4578063efef39a1146100cb575b600080fd5b61006f61006a366004610636565b6100de565b005b600154610084906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600254610084906001600160a01b031681565b6100bd60035481565b604051908152602001610098565b61006f6100d9366004610636565b6102da565b6000546001600160a01b031633146101485760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b60648201526084015b60405180910390fd5b6001546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b4919061064f565b8111156102155760405162461bcd60e51b815260206004820152602960248201527f54686520616d6f756e7420657863656564732074686520617661696c61626c65604482015268103130b630b731b29760b91b606482015260840161013f565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af115801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e9190610668565b50600054604080516001600160a01b039092168252602082018490527feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d91015b60405180910390a15050565b6002546040516331a9108f60e11b815260048101839052829130916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190610691565b6001600160a01b0316146103955760405162461bcd60e51b815260206004820152601160248201527027232a103737ba103337b91039b0b6329760791b604482015260640161013f565b600354600154604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156103e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040a919061064f565b10156104585760405162461bcd60e51b815260206004820152601860248201527f4e65786964546f6b656e206e6f7420617070726f7665642e0000000000000000604482015260640161013f565b6003546001546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c7919061064f565b10156105155760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f756768204e6578696420746f6b656e732e0000000000000000604482015260640161013f565b6001546003546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610668565b506002546040516323b872dd60e01b8152306004820152336024820152604481018490526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505060408051338152602081018690527f792fe07c0f3ce4ef42df79c4a2b07925168cddbaabf7a7ef1351f027a376031393500190506102ce565b60006020828403121561064857600080fd5b5035919050565b60006020828403121561066157600080fd5b5051919050565b60006020828403121561067a57600080fd5b8151801515811461068a57600080fd5b9392505050565b6000602082840312156106a357600080fd5b81516001600160a01b038116811461068a57600080fdfea2646970667358221220acb2f5cf817f2dafe465aa275824f978e53477638461984ecb2298228646a5aa64736f6c634300080f0033",
  "bytecodeSha1": "c916fee8a4ba69e256866495242404721901abfd",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.15+commit.e14f2714"
  },
  "contractName": "NexidSeller",
  "coverageMap": {
    "branches": {
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "NFTSeller.purchase": {
          "6": [
            1560,
            1602,
            true
          ],
          "7": [
            1798,
            1854,
            true
          ],
          "8": [
            2048,
            2089,
            true
          ]
        },
        "NFTSeller.withdraw": {
          "5": [
            2569,
            2614,
            true
          ]
        }
      },
      "17": {},
      "18": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    },
    "statements": {
      "10": {},
      "11": {},
      "12": {},
      "13": {},
      "14": {},
      "15": {},
      "16": {
        "NFTSeller.purchase": {
          "2": [
            945,
            1002
          ],
          "3": [
            1008,
            1065
          ],
          "4": [
            1071,
            1110
          ]
        },
        "NFTSeller.withdraw": {
          "0": [
            1265,
            1299
          ],
          "1": [
            1305,
            1339
          ]
        }
      },
      "17": {},
      "18": {},
      "2": {},
      "3": {},
      "4": {},
      "5": {},
      "6": {},
      "7": {},
      "8": {},
      "9": {}
    }
  },
  "dependencies": [
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Address",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Context",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Counters",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ERC165",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ERC721",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/ERC721URIStorage",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC165",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721Enumerable",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721Metadata",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/IERC721Receiver",
    "INFTSeller",
    "NFTSeller",
    "NexidNFT",
    "NexidToken",
    "OpenZeppelin/openzeppelin-contracts@4.0.0/Strings"
  ],
  "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c80632e1a7d4d1461005c5780632fb78efe146100715780639f21bd02146100a1578063a035b1fe146100b4578063efef39a1146100cb575b600080fd5b61006f61006a366004610636565b6100de565b005b600154610084906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600254610084906001600160a01b031681565b6100bd60035481565b604051908152602001610098565b61006f6100d9366004610636565b6102da565b6000546001600160a01b031633146101485760405162461bcd60e51b815260206004820152602260248201527f4f6e6c79206f776e65722063616e2063616c6c20746869732066756e6374696f604482015261371760f11b60648201526084015b60405180910390fd5b6001546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa158015610190573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101b4919061064f565b8111156102155760405162461bcd60e51b815260206004820152602960248201527f54686520616d6f756e7420657863656564732074686520617661696c61626c65604482015268103130b630b731b29760b91b606482015260840161013f565b60015460005460405163a9059cbb60e01b81526001600160a01b0391821660048201526024810185905291169063a9059cbb906044016020604051808303816000875af115801561026a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061028e9190610668565b50600054604080516001600160a01b039092168252602082018490527feaff4b37086828766ad3268786972c0cd24259d4c87a80f9d3963a3c3d999b0d91015b60405180910390a15050565b6002546040516331a9108f60e11b815260048101839052829130916001600160a01b0390911690636352211e90602401602060405180830381865afa158015610327573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061034b9190610691565b6001600160a01b0316146103955760405162461bcd60e51b815260206004820152601160248201527027232a103737ba103337b91039b0b6329760791b604482015260640161013f565b600354600154604051636eb1769f60e11b81523360048201523060248201526001600160a01b039091169063dd62ed3e90604401602060405180830381865afa1580156103e6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040a919061064f565b10156104585760405162461bcd60e51b815260206004820152601860248201527f4e65786964546f6b656e206e6f7420617070726f7665642e0000000000000000604482015260640161013f565b6003546001546040516370a0823160e01b81523360048201526001600160a01b03909116906370a0823190602401602060405180830381865afa1580156104a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104c7919061064f565b10156105155760405162461bcd60e51b815260206004820152601860248201527f4e6f7420656e6f756768204e6578696420746f6b656e732e0000000000000000604482015260640161013f565b6001546003546040516323b872dd60e01b815233600482015230602482015260448101919091526001600160a01b03909116906323b872dd906064016020604051808303816000875af1158015610570573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105949190610668565b506002546040516323b872dd60e01b8152306004820152336024820152604481018490526001600160a01b03909116906323b872dd90606401600060405180830381600087803b1580156105e757600080fd5b505af11580156105fb573d6000803e3d6000fd5b505060408051338152602081018690527f792fe07c0f3ce4ef42df79c4a2b07925168cddbaabf7a7ef1351f027a376031393500190506102ce565b60006020828403121561064857600080fd5b5035919050565b60006020828403121561066157600080fd5b5051919050565b60006020828403121561067a57600080fd5b8151801515811461068a57600080fd5b9392505050565b6000602082840312156106a357600080fd5b81516001600160a01b038116811461068a57600080fdfea2646970667358221220acb2f5cf817f2dafe465aa275824f978e53477638461984ecb2298228646a5aa64736f6c634300080f0033",
  "deployedSourceMap": "2731:297:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1148:196;;;;;;:::i;:::-;;:::i;:::-;;329:28;;;;;-1:-1:-1;;;;;329:28:16;;;;;;-1:-1:-1;;;;;381:32:19;;;363:51;;351:2;336:18;329:28:16;;;;;;;;361:24;;;;;-1:-1:-1;;;;;361:24:16;;;389:20;;;;;;;;;795:25:19;;;783:2;768:18;389:20:16;649:177:19;784:331:16;;;;;;:::i;:::-;;:::i;1148:196::-;2261:5;;-1:-1:-1;;;;;2261:5:16;2247:10;:19;2232:84;;;;-1:-1:-1;;;2232:84:16;;1033:2:19;2232:84:16;;;1015:21:19;1072:2;1052:18;;;1045:30;1111:34;1091:18;;;1084:62;-1:-1:-1;;;1162:18:19;;;1155:32;1204:19;;2232:84:16;;;;;;;;;2579:10:::1;::::0;:35:::1;::::0;-1:-1:-1;;;2579:35:16;;2608:4:::1;2579:35;::::0;::::1;363:51:19::0;1249:6:16;;-1:-1:-1;;;;;2579:10:16::1;::::0;:20:::1;::::0;336:18:19;;2579:35:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2569:6;:45;;2554:117;;;::::0;-1:-1:-1;;;2554:117:16;;1833:2:19;2554:117:16::1;::::0;::::1;1815:21:19::0;1872:2;1852:18;;;1845:30;1911:34;1891:18;;;1884:62;-1:-1:-1;;;1962:18:19;;;1955:39;2011:19;;2554:117:16::1;1631:405:19::0;2554:117:16::1;1265:10:::2;::::0;::::2;1285:5:::0;1265:34:::2;::::0;-1:-1:-1;;;1265:34:16;;-1:-1:-1;;;;;1285:5:16;;::::2;1265:34;::::0;::::2;2223:51:19::0;2290:18;;;2283:34;;;1265:10:16;::::2;::::0;:19:::2;::::0;2196:18:19;;1265:34:16::2;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1325:5:16::2;::::0;1310:29:::2;::::0;;-1:-1:-1;;;;;1325:5:16;;::::2;2223:51:19::0;;2305:2;2290:18;;2283:34;;;1310:29:16::2;::::0;2196:18:19;1310:29:16::2;;;;;;;;2322:1:::1;1148:196:::0;:::o;784:331::-;1560:8;;:25;;-1:-1:-1;;;1560:25:16;;;;;795::19;;;871:7:16;;1597:4;;-1:-1:-1;;;;;1560:8:16;;;;:16;;768:18:19;;1560:25:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1560:42:16;;1545:90;;;;-1:-1:-1;;;1545:90:16;;3107:2:19;1545:90:16;;;3089:21:19;3146:2;3126:18;;;3119:30;-1:-1:-1;;;3165:18:19;;;3158:47;3222:18;;1545:90:16;2905:341:19;1545:90:16;1849:5:::1;::::0;1798:10:::1;::::0;:47:::1;::::0;-1:-1:-1;;;1798:47:16;;1819:10:::1;1798:47;::::0;::::1;3463:34:19::0;1839:4:16::1;3513:18:19::0;;;3506:43;-1:-1:-1;;;;;1798:10:16;;::::1;::::0;:20:::1;::::0;3398:18:19;;1798:47:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:56;;1783:111;;;::::0;-1:-1:-1;;;1783:111:16;;3762:2:19;1783:111:16::1;::::0;::::1;3744:21:19::0;3801:2;3781:18;;;3774:30;3840:26;3820:18;;;3813:54;3884:18;;1783:111:16::1;3560:348:19::0;1783:111:16::1;2084:5:::2;::::0;2048:10:::2;::::0;:32:::2;::::0;-1:-1:-1;;;2048:32:16;;2069:10:::2;2048:32;::::0;::::2;363:51:19::0;-1:-1:-1;;;;;2048:10:16;;::::2;::::0;:20:::2;::::0;336:18:19;;2048:32:16::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;2033:96;;;::::0;-1:-1:-1;;;2033:96:16;;4115:2:19;2033:96:16::2;::::0;::::2;4097:21:19::0;4154:2;4134:18;;;4127:30;4193:26;4173:18;;;4166:54;4237:18;;2033:96:16::2;3913:348:19::0;2033:96:16::2;945:10:::3;::::0;996:5:::3;::::0;945:57:::3;::::0;-1:-1:-1;;;945:57:16;;969:10:::3;945:57;::::0;::::3;4506:34:19::0;989:4:16::3;4556:18:19::0;;;4549:43;4608:18;;;4601:34;;;;-1:-1:-1;;;;;945:10:16;;::::3;::::0;:23:::3;::::0;4441:18:19;;945:57:16::3;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;1008:8:16::3;::::0;:57:::3;::::0;-1:-1:-1;;;1008:57:16;;1038:4:::3;1008:57;::::0;::::3;4506:34:19::0;1045:10:16::3;4556:18:19::0;;;4549:43;4608:18;;;4601:34;;;-1:-1:-1;;;;;1008:8:16;;::::3;::::0;:21:::3;::::0;4441:18:19;;1008:57:16::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;1076:34:16::3;::::0;;1090:10:::3;2223:51:19::0;;2305:2;2290:18;;2283:34;;;1076::16::3;::::0;-1:-1:-1;2196:18:19;;-1:-1:-1;1076:34:16::3;2041:282:19::0;14:180;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:19;;14:180;-1:-1:-1;14:180:19:o;1442:184::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1604:16:19;;1442:184;-1:-1:-1;1442:184:19:o;2328:277::-;2395:6;2448:2;2436:9;2427:7;2423:23;2419:32;2416:52;;;2464:1;2461;2454:12;2416:52;2496:9;2490:16;2549:5;2542:13;2535:21;2528:5;2525:32;2515:60;;2571:1;2568;2561:12;2515:60;2594:5;2328:277;-1:-1:-1;;;2328:277:19:o;2610:290::-;2680:6;2733:2;2721:9;2712:7;2708:23;2704:32;2701:52;;;2749:1;2746;2739:12;2701:52;2775:16;;-1:-1:-1;;;;;2820:31:19;;2810:42;;2800:70;;2866:1;2863;2856:12",
  "language": "Solidity",
  "natspec": {
    "events": {
      "FundsWithdrawn(address,uint256)": {
        "notice": "Emitted when funds are withdrawn"
      },
      "ItemPurchased(address,uint256)": {
        "notice": "Emitted when an NFT has been sold"
      }
    },
    "kind": "dev",
    "methods": {
      "purchase(uint256)": {
        "details": "The NFT must belong to the NFTSellerThe caller must have approved the NFTSeller for the token transferThe caller must have at least the required amount of tokens",
        "notice": "It transfers the chosen NFT to the caller for the set amount of tokens",
        "params": {
          "tokenId": "The token ID of the NFT put up for sale"
        }
      },
      "withdraw(uint256)": {
        "details": "The caller must be the ownerThe amount can be at most the total of available funds",
        "notice": "It transfers the provided amount of the raised funds to the owner",
        "params": {
          "amount": "The amount of token to transfer"
        }
      }
    },
    "title": "The seller of Nexid NFTs",
    "version": 1
  },
  "offset": [
    2731,
    3028
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x57 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x5C JUMPI DUP1 PUSH4 0x2FB78EFE EQ PUSH2 0x71 JUMPI DUP1 PUSH4 0x9F21BD02 EQ PUSH2 0xA1 JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0xEFEF39A1 EQ PUSH2 0xCB JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x6F PUSH2 0x6A CALLDATASIZE PUSH1 0x4 PUSH2 0x636 JUMP JUMPDEST PUSH2 0xDE JUMP JUMPDEST STOP JUMPDEST PUSH1 0x1 SLOAD PUSH2 0x84 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x2 SLOAD PUSH2 0x84 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH2 0xBD PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x98 JUMP JUMPDEST PUSH2 0x6F PUSH2 0xD9 CALLDATASIZE PUSH1 0x4 PUSH2 0x636 JUMP JUMPDEST PUSH2 0x2DA JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x148 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x3717 PUSH1 0xF1 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x190 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B4 SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x215 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x54686520616D6F756E7420657863656564732074686520617661696C61626C65 PUSH1 0x44 DUP3 ADD MSTORE PUSH9 0x103130B630B731B297 PUSH1 0xB9 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x26A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x28E SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP5 SWAP1 MSTORE PUSH32 0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP4 SWAP1 MSTORE DUP3 SWAP2 ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x327 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x34B SWAP2 SWAP1 PUSH2 0x691 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x395 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x27232A103737BA103337B91039B0B63297 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0xDD62ED3E SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x3E6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x40A SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST LT ISZERO PUSH2 0x458 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E65786964546F6B656E206E6F7420617070726F7665642E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x4A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4C7 SWAP2 SWAP1 PUSH2 0x64F JUMP JUMPDEST LT ISZERO PUSH2 0x515 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x18 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E6F7420656E6F756768204E6578696420746F6B656E732E0000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x13F JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x570 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x594 SWAP2 SWAP1 PUSH2 0x668 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5FB JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 DUP1 MLOAD CALLER DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP7 SWAP1 MSTORE PUSH32 0x792FE07C0F3CE4EF42DF79C4A2B07925168CDDBAABF7A7EF1351F027A3760313 SWAP4 POP ADD SWAP1 POP PUSH2 0x2CE JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x648 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x661 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x67A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6A3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x68A JUMPI PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC 0xB2 CREATE2 0xCF DUP2 PUSH32 0x2DAFE465AA275824F978E53477638461984ECB2298228646A5AA64736F6C6343 STOP ADDMOD 0xF STOP CALLER ",
  "pcMap": {
    "0": {
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "5": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "CALLVALUE",
      "path": "16"
    },
    "6": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "7": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "8": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x10"
    },
    "11": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "12": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "14": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "15": {
      "dev": "Cannot send ether to nonpayable function",
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "REVERT",
      "path": "16"
    },
    "16": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "17": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "POP",
      "path": "16"
    },
    "18": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "20": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "21": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "LT",
      "path": "16"
    },
    "22": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x57"
    },
    "25": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "26": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "28": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "CALLDATALOAD",
      "path": "16"
    },
    "29": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0xE0"
    },
    "31": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "SHR",
      "path": "16"
    },
    "32": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "33": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2E1A7D4D"
    },
    "38": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "EQ",
      "path": "16"
    },
    "39": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5C"
    },
    "42": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "43": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "44": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x2FB78EFE"
    },
    "49": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "EQ",
      "path": "16"
    },
    "50": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x71"
    },
    "53": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "54": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "55": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x9F21BD02"
    },
    "60": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "EQ",
      "path": "16"
    },
    "61": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xA1"
    },
    "64": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "65": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "66": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA035B1FE"
    },
    "71": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "EQ",
      "path": "16"
    },
    "72": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xB4"
    },
    "75": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "76": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "77": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xEFEF39A1"
    },
    "82": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "EQ",
      "path": "16"
    },
    "83": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xCB"
    },
    "86": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "87": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "88": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "90": {
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "DUP1",
      "path": "16"
    },
    "91": {
      "first_revert": true,
      "fn": null,
      "offset": [
        2731,
        3028
      ],
      "op": "REVERT",
      "path": "16"
    },
    "92": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "93": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "96": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6A"
    },
    "99": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "100": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "102": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x636"
    },
    "105": {
      "fn": "NFTSeller.withdraw",
      "jump": "i",
      "offset": [
        1148,
        1344
      ],
      "op": "JUMP",
      "path": "16"
    },
    "106": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "107": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xDE"
    },
    "110": {
      "fn": "NFTSeller.withdraw",
      "jump": "i",
      "offset": [
        1148,
        1344
      ],
      "op": "JUMP",
      "path": "16"
    },
    "111": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "112": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "STOP",
      "path": "16"
    },
    "113": {
      "offset": [
        329,
        357
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "114": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "116": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "117": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x84"
    },
    "120": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "121": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "123": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "125": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "127": {
      "op": "SHL"
    },
    "128": {
      "op": "SUB"
    },
    "129": {
      "offset": [
        329,
        357
      ],
      "op": "AND",
      "path": "16"
    },
    "130": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "DUP2",
      "path": "16"
    },
    "131": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "JUMP",
      "path": "16"
    },
    "132": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "133": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "135": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "136": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "140": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "142": {
      "op": "SHL"
    },
    "143": {
      "op": "SUB"
    },
    "144": {
      "op": "SWAP1"
    },
    "145": {
      "op": "SWAP2"
    },
    "146": {
      "op": "AND"
    },
    "147": {
      "op": "DUP2"
    },
    "148": {
      "op": "MSTORE"
    },
    "149": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "151": {
      "op": "ADD"
    },
    "152": {
      "offset": [
        329,
        357
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "153": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "155": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "156": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "DUP1",
      "path": "16"
    },
    "157": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "158": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "SUB",
      "path": "16"
    },
    "159": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "160": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        329,
        357
      ],
      "op": "RETURN",
      "path": "16"
    },
    "161": {
      "offset": [
        361,
        385
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "162": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        361,
        385
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "164": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        361,
        385
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "165": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        361,
        385
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x84"
    },
    "168": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        361,
        385
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "171": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "173": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "175": {
      "op": "SHL"
    },
    "176": {
      "op": "SUB"
    },
    "177": {
      "offset": [
        361,
        385
      ],
      "op": "AND",
      "path": "16"
    },
    "178": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        361,
        385
      ],
      "op": "DUP2",
      "path": "16"
    },
    "179": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        361,
        385
      ],
      "op": "JUMP",
      "path": "16"
    },
    "180": {
      "offset": [
        389,
        409
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "181": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xBD"
    },
    "184": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "186": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "187": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "DUP2",
      "path": "16"
    },
    "188": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "JUMP",
      "path": "16"
    },
    "189": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "190": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "192": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        389,
        409
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "193": {
      "op": "SWAP1"
    },
    "194": {
      "op": "DUP2"
    },
    "195": {
      "op": "MSTORE"
    },
    "196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "198": {
      "op": "ADD"
    },
    "199": {
      "offset": [
        389,
        409
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x98"
    },
    "202": {
      "op": "JUMP"
    },
    "203": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "204": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x6F"
    },
    "207": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0xD9"
    },
    "210": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "CALLDATASIZE",
      "path": "16"
    },
    "211": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "213": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x636"
    },
    "216": {
      "fn": "NFTSeller.purchase",
      "jump": "i",
      "offset": [
        784,
        1115
      ],
      "op": "JUMP",
      "path": "16"
    },
    "217": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "218": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2DA"
    },
    "221": {
      "fn": "NFTSeller.purchase",
      "jump": "i",
      "offset": [
        784,
        1115
      ],
      "op": "JUMP",
      "path": "16"
    },
    "222": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "223": {
      "offset": [
        2261,
        2266
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "225": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2261,
        2266
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "226": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "228": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "230": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "232": {
      "op": "SHL"
    },
    "233": {
      "op": "SUB"
    },
    "234": {
      "offset": [
        2261,
        2266
      ],
      "op": "AND",
      "path": "16"
    },
    "235": {
      "offset": [
        2247,
        2257
      ],
      "op": "CALLER",
      "path": "16"
    },
    "236": {
      "offset": [
        2247,
        2266
      ],
      "op": "EQ",
      "path": "16"
    },
    "237": {
      "offset": [
        2232,
        2316
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x148"
    },
    "240": {
      "offset": [
        2232,
        2316
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "241": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "243": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "250": {
      "op": "SHL"
    },
    "251": {
      "offset": [
        2232,
        2316
      ],
      "op": "DUP2",
      "path": "16"
    },
    "252": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "255": {
      "offset": [
        2232,
        2316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "257": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "DUP3",
      "path": "16"
    },
    "258": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "ADD",
      "path": "16"
    },
    "259": {
      "op": "MSTORE"
    },
    "260": {
      "op": "PUSH1",
      "value": "0x22"
    },
    "262": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "264": {
      "op": "DUP3"
    },
    "265": {
      "op": "ADD"
    },
    "266": {
      "op": "MSTORE"
    },
    "267": {
      "op": "PUSH32",
      "value": "0x4F6E6C79206F776E65722063616E2063616C6C20746869732066756E6374696F"
    },
    "300": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "302": {
      "op": "DUP3"
    },
    "303": {
      "op": "ADD"
    },
    "304": {
      "op": "MSTORE"
    },
    "305": {
      "op": "PUSH2",
      "value": "0x3717"
    },
    "308": {
      "op": "PUSH1",
      "value": "0xF1"
    },
    "310": {
      "op": "SHL"
    },
    "311": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "313": {
      "op": "DUP3"
    },
    "314": {
      "op": "ADD"
    },
    "315": {
      "op": "MSTORE"
    },
    "316": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "318": {
      "op": "ADD"
    },
    "319": {
      "offset": [
        2232,
        2316
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "320": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "322": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "323": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "DUP1",
      "path": "16"
    },
    "324": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "325": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "SUB",
      "path": "16"
    },
    "326": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "327": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "16"
    },
    "328": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2232,
        2316
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "329": {
      "offset": [
        2579,
        2589
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "331": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2589
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "332": {
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "334": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "335": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "340": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "342": {
      "op": "SHL"
    },
    "343": {
      "offset": [
        2579,
        2614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "344": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "345": {
      "offset": [
        2608,
        2612
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "346": {
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "348": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP3",
      "path": "16"
    },
    "349": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "ADD",
      "path": "16"
    },
    "350": {
      "op": "MSTORE"
    },
    "351": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1249,
        1255
      ],
      "op": "DUP3",
      "path": "16"
    },
    "352": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1249,
        1255
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "355": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "357": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "359": {
      "op": "SHL"
    },
    "360": {
      "op": "SUB"
    },
    "361": {
      "offset": [
        2579,
        2589
      ],
      "op": "AND",
      "path": "16"
    },
    "362": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2589
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "363": {
      "offset": [
        2579,
        2599
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "368": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2599
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "369": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "371": {
      "op": "ADD"
    },
    "372": {
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "374": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "376": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "377": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP1",
      "path": "16"
    },
    "378": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP4",
      "path": "16"
    },
    "379": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "SUB",
      "path": "16"
    },
    "380": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "381": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP7",
      "path": "16"
    },
    "382": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "GAS",
      "path": "16"
    },
    "383": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "384": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "385": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP1",
      "path": "16"
    },
    "386": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "387": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x190"
    },
    "390": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "391": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "392": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "394": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP1",
      "path": "16"
    },
    "395": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "396": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "397": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "399": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "REVERT",
      "path": "16"
    },
    "400": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "401": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "POP",
      "path": "16"
    },
    "402": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "POP",
      "path": "16"
    },
    "403": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "POP",
      "path": "16"
    },
    "404": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "POP",
      "path": "16"
    },
    "405": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "407": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "408": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "409": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "411": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "NOT",
      "path": "16"
    },
    "412": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "414": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP3",
      "path": "16"
    },
    "415": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "ADD",
      "path": "16"
    },
    "416": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "AND",
      "path": "16"
    },
    "417": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP3",
      "path": "16"
    },
    "418": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "ADD",
      "path": "16"
    },
    "419": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP1",
      "path": "16"
    },
    "420": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "422": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "423": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "POP",
      "path": "16"
    },
    "424": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "DUP2",
      "path": "16"
    },
    "425": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "ADD",
      "path": "16"
    },
    "426": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "427": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x1B4"
    },
    "430": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "431": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "432": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64F"
    },
    "435": {
      "fn": "NFTSeller.withdraw",
      "jump": "i",
      "offset": [
        2579,
        2614
      ],
      "op": "JUMP",
      "path": "16"
    },
    "436": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2579,
        2614
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "437": {
      "offset": [
        2569,
        2575
      ],
      "op": "DUP2",
      "path": "16"
    },
    "438": {
      "offset": [
        2569,
        2614
      ],
      "op": "GT",
      "path": "16"
    },
    "439": {
      "branch": 5,
      "fn": "NFTSeller.withdraw",
      "offset": [
        2569,
        2614
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "440": {
      "offset": [
        2554,
        2671
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x215"
    },
    "443": {
      "branch": 5,
      "offset": [
        2554,
        2671
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "444": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2554,
        2671
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "446": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2554,
        2671
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "447": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "451": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "453": {
      "op": "SHL"
    },
    "454": {
      "offset": [
        2554,
        2671
      ],
      "op": "DUP2",
      "path": "16"
    },
    "455": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2554,
        2671
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "456": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "458": {
      "offset": [
        2554,
        2671
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "460": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2554,
        2671
      ],
      "op": "DUP3",
      "path": "16"
    },
    "461": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        2554,
        2671
      ],
      "op": "ADD",
      "path": "16"
    },
    "462": {
      "op": "MSTORE"
    },
    "463": {
      "op": "PUSH1",
      "value": "0x29"
    },
    "465": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "467": {
      "op": "DUP3"
    },
    "468": {
      "op": "ADD"
    },
    "469": {
      "op": "MSTORE"
    },
    "470": {
      "op": "PUSH32",
      "value": "0x54686520616D6F756E7420657863656564732074686520617661696C61626C65"
    },
    "503": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "505": {
      "op": "DUP3"
    },
    "506": {
      "op": "ADD"
    },
    "507": {
      "op": "MSTORE"
    },
    "508": {
      "op": "PUSH9",
      "value": "0x103130B630B731B297"
    },
    "518": {
      "op": "PUSH1",
      "value": "0xB9"
    },
    "520": {
      "op": "SHL"
    },
    "521": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "523": {
      "op": "DUP3"
    },
    "524": {
      "op": "ADD"
    },
    "525": {
      "op": "MSTORE"
    },
    "526": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "528": {
      "op": "ADD"
    },
    "529": {
      "offset": [
        2554,
        2671
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13F"
    },
    "532": {
      "op": "JUMP"
    },
    "533": {
      "offset": [
        2554,
        2671
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "534": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1275
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 0,
      "value": "0x1"
    },
    "536": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1275
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "537": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1275
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "539": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1285,
        1290
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "540": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "542": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "543": {
      "op": "PUSH4",
      "value": "0xA9059CBB"
    },
    "548": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "550": {
      "op": "SHL"
    },
    "551": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP2",
      "path": "16"
    },
    "552": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "553": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "555": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "557": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "559": {
      "op": "SHL"
    },
    "560": {
      "op": "SUB"
    },
    "561": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1285,
        1290
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "562": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1285,
        1290
      ],
      "op": "DUP3",
      "path": "16"
    },
    "563": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1285,
        1290
      ],
      "op": "AND",
      "path": "16"
    },
    "564": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "566": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP3",
      "path": "16"
    },
    "567": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "ADD",
      "path": "16"
    },
    "568": {
      "op": "MSTORE"
    },
    "569": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "571": {
      "op": "DUP2"
    },
    "572": {
      "op": "ADD"
    },
    "573": {
      "op": "DUP6"
    },
    "574": {
      "op": "SWAP1"
    },
    "575": {
      "op": "MSTORE"
    },
    "576": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1275
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "577": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1275
      ],
      "op": "AND",
      "path": "16"
    },
    "578": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1275
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "579": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1284
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xA9059CBB"
    },
    "584": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1284
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "585": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "587": {
      "op": "ADD"
    },
    "588": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "590": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "592": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "593": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP1",
      "path": "16"
    },
    "594": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP4",
      "path": "16"
    },
    "595": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "SUB",
      "path": "16"
    },
    "596": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP2",
      "path": "16"
    },
    "597": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "599": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP8",
      "path": "16"
    },
    "600": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "GAS",
      "path": "16"
    },
    "601": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "CALL",
      "path": "16"
    },
    "602": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "603": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP1",
      "path": "16"
    },
    "604": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "605": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x26A"
    },
    "608": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "609": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "610": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "612": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP1",
      "path": "16"
    },
    "613": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "614": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "615": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "617": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "REVERT",
      "path": "16"
    },
    "618": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "619": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "POP",
      "path": "16"
    },
    "620": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "POP",
      "path": "16"
    },
    "621": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "POP",
      "path": "16"
    },
    "622": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "POP",
      "path": "16"
    },
    "623": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "625": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "626": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "627": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "629": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "NOT",
      "path": "16"
    },
    "630": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "632": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP3",
      "path": "16"
    },
    "633": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "ADD",
      "path": "16"
    },
    "634": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "AND",
      "path": "16"
    },
    "635": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP3",
      "path": "16"
    },
    "636": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "ADD",
      "path": "16"
    },
    "637": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP1",
      "path": "16"
    },
    "638": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "640": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "641": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "POP",
      "path": "16"
    },
    "642": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "DUP2",
      "path": "16"
    },
    "643": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "ADD",
      "path": "16"
    },
    "644": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "645": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x28E"
    },
    "648": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "649": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "650": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x668"
    },
    "653": {
      "fn": "NFTSeller.withdraw",
      "jump": "i",
      "offset": [
        1265,
        1299
      ],
      "op": "JUMP",
      "path": "16"
    },
    "654": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1265,
        1299
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "655": {
      "op": "POP"
    },
    "656": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1325,
        1330
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 1,
      "value": "0x0"
    },
    "658": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1325,
        1330
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "659": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "661": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "DUP1",
      "path": "16"
    },
    "662": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "663": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "665": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "667": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "669": {
      "op": "SHL"
    },
    "670": {
      "op": "SUB"
    },
    "671": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1325,
        1330
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "672": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1325,
        1330
      ],
      "op": "SWAP3",
      "path": "16"
    },
    "673": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1325,
        1330
      ],
      "op": "AND",
      "path": "16"
    },
    "674": {
      "op": "DUP3"
    },
    "675": {
      "op": "MSTORE"
    },
    "676": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "678": {
      "op": "DUP3"
    },
    "679": {
      "op": "ADD"
    },
    "680": {
      "op": "DUP5"
    },
    "681": {
      "op": "SWAP1"
    },
    "682": {
      "op": "MSTORE"
    },
    "683": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0xEAFF4B37086828766AD3268786972C0CD24259D4C87A80F9D3963A3C3D999B0D"
    },
    "716": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "717": {
      "op": "ADD"
    },
    "718": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "719": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "721": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "722": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "DUP1",
      "path": "16"
    },
    "723": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "724": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "SUB",
      "path": "16"
    },
    "725": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "726": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1310,
        1339
      ],
      "op": "LOG1",
      "path": "16"
    },
    "727": {
      "offset": [
        2322,
        2323
      ],
      "op": "POP",
      "path": "16"
    },
    "728": {
      "fn": "NFTSeller.withdraw",
      "offset": [
        1148,
        1344
      ],
      "op": "POP",
      "path": "16"
    },
    "729": {
      "fn": "NFTSeller.withdraw",
      "jump": "o",
      "offset": [
        1148,
        1344
      ],
      "op": "JUMP",
      "path": "16"
    },
    "730": {
      "fn": "NFTSeller.purchase",
      "offset": [
        784,
        1115
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "731": {
      "offset": [
        1560,
        1568
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x2"
    },
    "733": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1568
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "734": {
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "736": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "737": {
      "op": "PUSH4",
      "value": "0x31A9108F"
    },
    "742": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "744": {
      "op": "SHL"
    },
    "745": {
      "offset": [
        1560,
        1585
      ],
      "op": "DUP2",
      "path": "16"
    },
    "746": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "747": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "749": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP2",
      "path": "16"
    },
    "750": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "ADD",
      "path": "16"
    },
    "751": {
      "op": "DUP4"
    },
    "752": {
      "op": "SWAP1"
    },
    "753": {
      "op": "MSTORE"
    },
    "754": {
      "fn": "NFTSeller.purchase",
      "offset": [
        871,
        878
      ],
      "op": "DUP3",
      "path": "16"
    },
    "755": {
      "fn": "NFTSeller.purchase",
      "offset": [
        871,
        878
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "756": {
      "offset": [
        1597,
        1601
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "757": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1597,
        1601
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "758": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "760": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "762": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "764": {
      "op": "SHL"
    },
    "765": {
      "op": "SUB"
    },
    "766": {
      "offset": [
        1560,
        1568
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "767": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1568
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "768": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1568
      ],
      "op": "AND",
      "path": "16"
    },
    "769": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1568
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "770": {
      "offset": [
        1560,
        1576
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x6352211E"
    },
    "775": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1576
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "776": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "778": {
      "op": "ADD"
    },
    "779": {
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "781": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "783": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "784": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP1",
      "path": "16"
    },
    "785": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP4",
      "path": "16"
    },
    "786": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "SUB",
      "path": "16"
    },
    "787": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP2",
      "path": "16"
    },
    "788": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP7",
      "path": "16"
    },
    "789": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "GAS",
      "path": "16"
    },
    "790": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "791": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "792": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP1",
      "path": "16"
    },
    "793": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "794": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x327"
    },
    "797": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "798": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "799": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "801": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP1",
      "path": "16"
    },
    "802": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "803": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "804": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "806": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "REVERT",
      "path": "16"
    },
    "807": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "808": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "POP",
      "path": "16"
    },
    "809": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "POP",
      "path": "16"
    },
    "810": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "POP",
      "path": "16"
    },
    "811": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "POP",
      "path": "16"
    },
    "812": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "814": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "815": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "816": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "818": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "NOT",
      "path": "16"
    },
    "819": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "821": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP3",
      "path": "16"
    },
    "822": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "ADD",
      "path": "16"
    },
    "823": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "AND",
      "path": "16"
    },
    "824": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP3",
      "path": "16"
    },
    "825": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "ADD",
      "path": "16"
    },
    "826": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP1",
      "path": "16"
    },
    "827": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "829": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "830": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "POP",
      "path": "16"
    },
    "831": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "DUP2",
      "path": "16"
    },
    "832": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "ADD",
      "path": "16"
    },
    "833": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "834": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x34B"
    },
    "837": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "838": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "839": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x691"
    },
    "842": {
      "fn": "NFTSeller.purchase",
      "jump": "i",
      "offset": [
        1560,
        1585
      ],
      "op": "JUMP",
      "path": "16"
    },
    "843": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1585
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "844": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "846": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "848": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "850": {
      "op": "SHL"
    },
    "851": {
      "op": "SUB"
    },
    "852": {
      "offset": [
        1560,
        1602
      ],
      "op": "AND",
      "path": "16"
    },
    "853": {
      "branch": 6,
      "fn": "NFTSeller.purchase",
      "offset": [
        1560,
        1602
      ],
      "op": "EQ",
      "path": "16"
    },
    "854": {
      "offset": [
        1545,
        1635
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x395"
    },
    "857": {
      "branch": 6,
      "offset": [
        1545,
        1635
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "858": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1545,
        1635
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "860": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1545,
        1635
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "861": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "865": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "867": {
      "op": "SHL"
    },
    "868": {
      "offset": [
        1545,
        1635
      ],
      "op": "DUP2",
      "path": "16"
    },
    "869": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1545,
        1635
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "870": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "872": {
      "offset": [
        1545,
        1635
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "874": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1545,
        1635
      ],
      "op": "DUP3",
      "path": "16"
    },
    "875": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1545,
        1635
      ],
      "op": "ADD",
      "path": "16"
    },
    "876": {
      "op": "MSTORE"
    },
    "877": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "879": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "881": {
      "op": "DUP3"
    },
    "882": {
      "op": "ADD"
    },
    "883": {
      "op": "MSTORE"
    },
    "884": {
      "op": "PUSH17",
      "value": "0x27232A103737BA103337B91039B0B63297"
    },
    "902": {
      "op": "PUSH1",
      "value": "0x79"
    },
    "904": {
      "op": "SHL"
    },
    "905": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "907": {
      "op": "DUP3"
    },
    "908": {
      "op": "ADD"
    },
    "909": {
      "op": "MSTORE"
    },
    "910": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "912": {
      "op": "ADD"
    },
    "913": {
      "offset": [
        1545,
        1635
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13F"
    },
    "916": {
      "op": "JUMP"
    },
    "917": {
      "offset": [
        1545,
        1635
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "918": {
      "offset": [
        1849,
        1854
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "920": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1849,
        1854
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "921": {
      "offset": [
        1798,
        1808
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "923": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1808
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "924": {
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "926": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "927": {
      "op": "PUSH4",
      "value": "0x6EB1769F"
    },
    "932": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "934": {
      "op": "SHL"
    },
    "935": {
      "offset": [
        1798,
        1845
      ],
      "op": "DUP2",
      "path": "16"
    },
    "936": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "937": {
      "offset": [
        1819,
        1829
      ],
      "op": "CALLER",
      "path": "16"
    },
    "938": {
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "940": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP3",
      "path": "16"
    },
    "941": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "ADD",
      "path": "16"
    },
    "942": {
      "op": "MSTORE"
    },
    "943": {
      "offset": [
        1839,
        1843
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "944": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "946": {
      "op": "DUP3"
    },
    "947": {
      "op": "ADD"
    },
    "948": {
      "op": "MSTORE"
    },
    "949": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "951": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "953": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "955": {
      "op": "SHL"
    },
    "956": {
      "op": "SUB"
    },
    "957": {
      "offset": [
        1798,
        1808
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "958": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1808
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "959": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1808
      ],
      "op": "AND",
      "path": "16"
    },
    "960": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1808
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "961": {
      "offset": [
        1798,
        1818
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0xDD62ED3E"
    },
    "966": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1818
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "967": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "969": {
      "op": "ADD"
    },
    "970": {
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "972": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "974": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "975": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP1",
      "path": "16"
    },
    "976": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP4",
      "path": "16"
    },
    "977": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "SUB",
      "path": "16"
    },
    "978": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP2",
      "path": "16"
    },
    "979": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP7",
      "path": "16"
    },
    "980": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "GAS",
      "path": "16"
    },
    "981": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "982": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "983": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP1",
      "path": "16"
    },
    "984": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "985": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x3E6"
    },
    "988": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "989": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "990": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "992": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP1",
      "path": "16"
    },
    "993": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "994": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "995": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "997": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "REVERT",
      "path": "16"
    },
    "998": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "999": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "POP",
      "path": "16"
    },
    "1000": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "POP",
      "path": "16"
    },
    "1001": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "POP",
      "path": "16"
    },
    "1002": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "POP",
      "path": "16"
    },
    "1003": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1005": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1006": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1007": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1009": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "NOT",
      "path": "16"
    },
    "1010": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1012": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1013": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "ADD",
      "path": "16"
    },
    "1014": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "AND",
      "path": "16"
    },
    "1015": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1016": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "ADD",
      "path": "16"
    },
    "1017": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1018": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1020": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1021": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "POP",
      "path": "16"
    },
    "1022": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1023": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "ADD",
      "path": "16"
    },
    "1024": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1025": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x40A"
    },
    "1028": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1029": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1030": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64F"
    },
    "1033": {
      "fn": "NFTSeller.purchase",
      "jump": "i",
      "offset": [
        1798,
        1845
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1034": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1845
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1035": {
      "offset": [
        1798,
        1854
      ],
      "op": "LT",
      "path": "16"
    },
    "1036": {
      "branch": 7,
      "fn": "NFTSeller.purchase",
      "offset": [
        1798,
        1854
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1037": {
      "offset": [
        1783,
        1894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x458"
    },
    "1040": {
      "branch": 7,
      "offset": [
        1783,
        1894
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1041": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1783,
        1894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1043": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1783,
        1894
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1044": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1048": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1050": {
      "op": "SHL"
    },
    "1051": {
      "offset": [
        1783,
        1894
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1052": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1783,
        1894
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1053": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1055": {
      "offset": [
        1783,
        1894
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1057": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1783,
        1894
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1058": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1783,
        1894
      ],
      "op": "ADD",
      "path": "16"
    },
    "1059": {
      "op": "MSTORE"
    },
    "1060": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "op": "PUSH32",
      "value": "0x4E65786964546F6B656E206E6F7420617070726F7665642E0000000000000000"
    },
    "1100": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1102": {
      "op": "DUP3"
    },
    "1103": {
      "op": "ADD"
    },
    "1104": {
      "op": "MSTORE"
    },
    "1105": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1107": {
      "op": "ADD"
    },
    "1108": {
      "offset": [
        1783,
        1894
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13F"
    },
    "1111": {
      "op": "JUMP"
    },
    "1112": {
      "offset": [
        1783,
        1894
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1113": {
      "offset": [
        2084,
        2089
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1115": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2084,
        2089
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1116": {
      "offset": [
        2048,
        2058
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1"
    },
    "1118": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2058
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1119": {
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1121": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1122": {
      "op": "PUSH4",
      "value": "0x70A08231"
    },
    "1127": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1129": {
      "op": "SHL"
    },
    "1130": {
      "offset": [
        2048,
        2080
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1131": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1132": {
      "offset": [
        2069,
        2079
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1133": {
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1135": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1136": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "ADD",
      "path": "16"
    },
    "1137": {
      "op": "MSTORE"
    },
    "1138": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1140": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1142": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1144": {
      "op": "SHL"
    },
    "1145": {
      "op": "SUB"
    },
    "1146": {
      "offset": [
        2048,
        2058
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1147": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2058
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1148": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2058
      ],
      "op": "AND",
      "path": "16"
    },
    "1149": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2058
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1150": {
      "offset": [
        2048,
        2068
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x70A08231"
    },
    "1155": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2068
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1156": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1158": {
      "op": "ADD"
    },
    "1159": {
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1161": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1163": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1164": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1165": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1166": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "SUB",
      "path": "16"
    },
    "1167": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1168": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP7",
      "path": "16"
    },
    "1169": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "GAS",
      "path": "16"
    },
    "1170": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "STATICCALL",
      "path": "16"
    },
    "1171": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1172": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1173": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1174": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4A3"
    },
    "1177": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1178": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1179": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1181": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1182": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1183": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1184": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1186": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1187": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1188": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "POP",
      "path": "16"
    },
    "1189": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "POP",
      "path": "16"
    },
    "1190": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "POP",
      "path": "16"
    },
    "1191": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "POP",
      "path": "16"
    },
    "1192": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1194": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1195": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1196": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1198": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "NOT",
      "path": "16"
    },
    "1199": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1201": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1202": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "ADD",
      "path": "16"
    },
    "1203": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "AND",
      "path": "16"
    },
    "1204": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1205": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "ADD",
      "path": "16"
    },
    "1206": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1207": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1209": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1210": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "POP",
      "path": "16"
    },
    "1211": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1212": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "ADD",
      "path": "16"
    },
    "1213": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1214": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x4C7"
    },
    "1217": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1218": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1219": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x64F"
    },
    "1222": {
      "fn": "NFTSeller.purchase",
      "jump": "i",
      "offset": [
        2048,
        2080
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1223": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2080
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1224": {
      "offset": [
        2048,
        2089
      ],
      "op": "LT",
      "path": "16"
    },
    "1225": {
      "branch": 8,
      "fn": "NFTSeller.purchase",
      "offset": [
        2048,
        2089
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1226": {
      "offset": [
        2033,
        2129
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x515"
    },
    "1229": {
      "branch": 8,
      "offset": [
        2033,
        2129
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1230": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2033,
        2129
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1232": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2033,
        2129
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1233": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "1237": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1239": {
      "op": "SHL"
    },
    "1240": {
      "offset": [
        2033,
        2129
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1241": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2033,
        2129
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1244": {
      "offset": [
        2033,
        2129
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1246": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2033,
        2129
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1247": {
      "fn": "NFTSeller.purchase",
      "offset": [
        2033,
        2129
      ],
      "op": "ADD",
      "path": "16"
    },
    "1248": {
      "op": "MSTORE"
    },
    "1249": {
      "op": "PUSH1",
      "value": "0x18"
    },
    "1251": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1253": {
      "op": "DUP3"
    },
    "1254": {
      "op": "ADD"
    },
    "1255": {
      "op": "MSTORE"
    },
    "1256": {
      "op": "PUSH32",
      "value": "0x4E6F7420656E6F756768204E6578696420746F6B656E732E0000000000000000"
    },
    "1289": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1291": {
      "op": "DUP3"
    },
    "1292": {
      "op": "ADD"
    },
    "1293": {
      "op": "MSTORE"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1296": {
      "op": "ADD"
    },
    "1297": {
      "offset": [
        2033,
        2129
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x13F"
    },
    "1300": {
      "op": "JUMP"
    },
    "1301": {
      "offset": [
        2033,
        2129
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1302": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        955
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 2,
      "value": "0x1"
    },
    "1304": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        955
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1305": {
      "fn": "NFTSeller.purchase",
      "offset": [
        996,
        1001
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x3"
    },
    "1307": {
      "fn": "NFTSeller.purchase",
      "offset": [
        996,
        1001
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1308": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1310": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1311": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1316": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1318": {
      "op": "SHL"
    },
    "1319": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1320": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1321": {
      "fn": "NFTSeller.purchase",
      "offset": [
        969,
        979
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1322": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1324": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1325": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "ADD",
      "path": "16"
    },
    "1326": {
      "op": "MSTORE"
    },
    "1327": {
      "fn": "NFTSeller.purchase",
      "offset": [
        989,
        993
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "1328": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1330": {
      "op": "DUP3"
    },
    "1331": {
      "op": "ADD"
    },
    "1332": {
      "op": "MSTORE"
    },
    "1333": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1335": {
      "op": "DUP2"
    },
    "1336": {
      "op": "ADD"
    },
    "1337": {
      "op": "SWAP2"
    },
    "1338": {
      "op": "SWAP1"
    },
    "1339": {
      "op": "SWAP2"
    },
    "1340": {
      "op": "MSTORE"
    },
    "1341": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1343": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1345": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1347": {
      "op": "SHL"
    },
    "1348": {
      "op": "SUB"
    },
    "1349": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1350": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        955
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1351": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        955
      ],
      "op": "AND",
      "path": "16"
    },
    "1352": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        955
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1353": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        968
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "1358": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        968
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1359": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1361": {
      "op": "ADD"
    },
    "1362": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x20"
    },
    "1364": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1366": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1367": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1368": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1369": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "SUB",
      "path": "16"
    },
    "1370": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1371": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1373": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1374": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "GAS",
      "path": "16"
    },
    "1375": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "CALL",
      "path": "16"
    },
    "1376": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1377": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1378": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1379": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x570"
    },
    "1382": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1383": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1384": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1386": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1387": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1388": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1389": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1391": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1392": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1393": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "POP",
      "path": "16"
    },
    "1394": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "POP",
      "path": "16"
    },
    "1395": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "POP",
      "path": "16"
    },
    "1396": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "POP",
      "path": "16"
    },
    "1397": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1399": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1400": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1401": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1403": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "NOT",
      "path": "16"
    },
    "1404": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x1F"
    },
    "1406": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1407": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "ADD",
      "path": "16"
    },
    "1408": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "AND",
      "path": "16"
    },
    "1409": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1410": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "ADD",
      "path": "16"
    },
    "1411": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1412": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1414": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1415": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "POP",
      "path": "16"
    },
    "1416": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1417": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "ADD",
      "path": "16"
    },
    "1418": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1419": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x594"
    },
    "1422": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1423": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1424": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x668"
    },
    "1427": {
      "fn": "NFTSeller.purchase",
      "jump": "i",
      "offset": [
        945,
        1002
      ],
      "op": "JUMP",
      "path": "16"
    },
    "1428": {
      "fn": "NFTSeller.purchase",
      "offset": [
        945,
        1002
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1429": {
      "op": "POP"
    },
    "1430": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1016
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 3,
      "value": "0x2"
    },
    "1432": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1016
      ],
      "op": "SLOAD",
      "path": "16"
    },
    "1433": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1435": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1436": {
      "op": "PUSH4",
      "value": "0x23B872DD"
    },
    "1441": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1443": {
      "op": "SHL"
    },
    "1444": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1445": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "MSTORE",
      "path": "16"
    },
    "1446": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1038,
        1042
      ],
      "op": "ADDRESS",
      "path": "16"
    },
    "1447": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x4"
    },
    "1449": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP3",
      "path": "16"
    },
    "1450": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "ADD",
      "path": "16"
    },
    "1451": {
      "op": "MSTORE"
    },
    "1452": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1045,
        1055
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1453": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1455": {
      "op": "DUP3"
    },
    "1456": {
      "op": "ADD"
    },
    "1457": {
      "op": "MSTORE"
    },
    "1458": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1460": {
      "op": "DUP2"
    },
    "1461": {
      "op": "ADD"
    },
    "1462": {
      "op": "DUP5"
    },
    "1463": {
      "op": "SWAP1"
    },
    "1464": {
      "op": "MSTORE"
    },
    "1465": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1467": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1469": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1471": {
      "op": "SHL"
    },
    "1472": {
      "op": "SUB"
    },
    "1473": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1016
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1474": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1016
      ],
      "op": "SWAP2",
      "path": "16"
    },
    "1475": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1016
      ],
      "op": "AND",
      "path": "16"
    },
    "1476": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1016
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1477": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1029
      ],
      "op": "PUSH4",
      "path": "16",
      "value": "0x23B872DD"
    },
    "1482": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1029
      ],
      "op": "SWAP1",
      "path": "16"
    },
    "1483": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1485": {
      "op": "ADD"
    },
    "1486": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1488": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x40"
    },
    "1490": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1491": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1492": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP4",
      "path": "16"
    },
    "1493": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "SUB",
      "path": "16"
    },
    "1494": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP2",
      "path": "16"
    },
    "1495": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1497": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP8",
      "path": "16"
    },
    "1498": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1499": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "EXTCODESIZE",
      "path": "16"
    },
    "1500": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1501": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1502": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1503": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5E7"
    },
    "1506": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1507": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1509": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1510": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1511": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1512": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "POP",
      "path": "16"
    },
    "1513": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "GAS",
      "path": "16"
    },
    "1514": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "CALL",
      "path": "16"
    },
    "1515": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1516": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1517": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "ISZERO",
      "path": "16"
    },
    "1518": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x5FB"
    },
    "1521": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "JUMPI",
      "path": "16"
    },
    "1522": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1523": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1525": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1526": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "RETURNDATACOPY",
      "path": "16"
    },
    "1527": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "RETURNDATASIZE",
      "path": "16"
    },
    "1528": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "PUSH1",
      "path": "16",
      "value": "0x0"
    },
    "1530": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "REVERT",
      "path": "16"
    },
    "1531": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1008,
        1065
      ],
      "op": "JUMPDEST",
      "path": "16"
    },
    "1532": {
      "op": "POP"
    },
    "1533": {
      "op": "POP"
    },
    "1534": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1076,
        1110
      ],
      "op": "PUSH1",
      "path": "16",
      "statement": 4,
      "value": "0x40"
    },
    "1536": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1076,
        1110
      ],
      "op": "DUP1",
      "path": "16"
    },
    "1537": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1076,
        1110
      ],
      "op": "MLOAD",
      "path": "16"
    },
    "1538": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1090,
        1100
      ],
      "op": "CALLER",
      "path": "16"
    },
    "1539": {
      "op": "DUP2"
    },
    "1540": {
      "op": "MSTORE"
    },
    "1541": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1543": {
      "op": "DUP2"
    },
    "1544": {
      "op": "ADD"
    },
    "1545": {
      "op": "DUP7"
    },
    "1546": {
      "op": "SWAP1"
    },
    "1547": {
      "op": "MSTORE"
    },
    "1548": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1076,
        1110
      ],
      "op": "PUSH32",
      "path": "16",
      "value": "0x792FE07C0F3CE4EF42DF79C4A2B07925168CDDBAABF7A7EF1351F027A3760313"
    },
    "1581": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1076,
        1110
      ],
      "op": "SWAP4",
      "path": "16"
    },
    "1582": {
      "op": "POP"
    },
    "1583": {
      "op": "ADD"
    },
    "1584": {
      "op": "SWAP1"
    },
    "1585": {
      "op": "POP"
    },
    "1586": {
      "fn": "NFTSeller.purchase",
      "offset": [
        1076,
        1110
      ],
      "op": "PUSH2",
      "path": "16",
      "value": "0x2CE"
    },
    "1589": {
      "op": "JUMP"
    },
    "1590": {
      "op": "JUMPDEST"
    },
    "1591": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1595": {
      "op": "DUP3"
    },
    "1596": {
      "op": "DUP5"
    },
    "1597": {
      "op": "SUB"
    },
    "1598": {
      "op": "SLT"
    },
    "1599": {
      "op": "ISZERO"
    },
    "1600": {
      "op": "PUSH2",
      "value": "0x648"
    },
    "1603": {
      "op": "JUMPI"
    },
    "1604": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1606": {
      "op": "DUP1"
    },
    "1607": {
      "op": "REVERT"
    },
    "1608": {
      "op": "JUMPDEST"
    },
    "1609": {
      "op": "POP"
    },
    "1610": {
      "op": "CALLDATALOAD"
    },
    "1611": {
      "op": "SWAP2"
    },
    "1612": {
      "op": "SWAP1"
    },
    "1613": {
      "op": "POP"
    },
    "1614": {
      "jump": "o",
      "op": "JUMP"
    },
    "1615": {
      "op": "JUMPDEST"
    },
    "1616": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1618": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1620": {
      "op": "DUP3"
    },
    "1621": {
      "op": "DUP5"
    },
    "1622": {
      "op": "SUB"
    },
    "1623": {
      "op": "SLT"
    },
    "1624": {
      "op": "ISZERO"
    },
    "1625": {
      "op": "PUSH2",
      "value": "0x661"
    },
    "1628": {
      "op": "JUMPI"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1631": {
      "op": "DUP1"
    },
    "1632": {
      "op": "REVERT"
    },
    "1633": {
      "op": "JUMPDEST"
    },
    "1634": {
      "op": "POP"
    },
    "1635": {
      "op": "MLOAD"
    },
    "1636": {
      "op": "SWAP2"
    },
    "1637": {
      "op": "SWAP1"
    },
    "1638": {
      "op": "POP"
    },
    "1639": {
      "jump": "o",
      "op": "JUMP"
    },
    "1640": {
      "op": "JUMPDEST"
    },
    "1641": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1643": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1645": {
      "op": "DUP3"
    },
    "1646": {
      "op": "DUP5"
    },
    "1647": {
      "op": "SUB"
    },
    "1648": {
      "op": "SLT"
    },
    "1649": {
      "op": "ISZERO"
    },
    "1650": {
      "op": "PUSH2",
      "value": "0x67A"
    },
    "1653": {
      "op": "JUMPI"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1656": {
      "op": "DUP1"
    },
    "1657": {
      "op": "REVERT"
    },
    "1658": {
      "op": "JUMPDEST"
    },
    "1659": {
      "op": "DUP2"
    },
    "1660": {
      "op": "MLOAD"
    },
    "1661": {
      "op": "DUP1"
    },
    "1662": {
      "op": "ISZERO"
    },
    "1663": {
      "op": "ISZERO"
    },
    "1664": {
      "op": "DUP2"
    },
    "1665": {
      "op": "EQ"
    },
    "1666": {
      "op": "PUSH2",
      "value": "0x68A"
    },
    "1669": {
      "op": "JUMPI"
    },
    "1670": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1672": {
      "op": "DUP1"
    },
    "1673": {
      "op": "REVERT"
    },
    "1674": {
      "op": "JUMPDEST"
    },
    "1675": {
      "op": "SWAP4"
    },
    "1676": {
      "op": "SWAP3"
    },
    "1677": {
      "op": "POP"
    },
    "1678": {
      "op": "POP"
    },
    "1679": {
      "op": "POP"
    },
    "1680": {
      "jump": "o",
      "op": "JUMP"
    },
    "1681": {
      "op": "JUMPDEST"
    },
    "1682": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1684": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1686": {
      "op": "DUP3"
    },
    "1687": {
      "op": "DUP5"
    },
    "1688": {
      "op": "SUB"
    },
    "1689": {
      "op": "SLT"
    },
    "1690": {
      "op": "ISZERO"
    },
    "1691": {
      "op": "PUSH2",
      "value": "0x6A3"
    },
    "1694": {
      "op": "JUMPI"
    },
    "1695": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1697": {
      "op": "DUP1"
    },
    "1698": {
      "op": "REVERT"
    },
    "1699": {
      "op": "JUMPDEST"
    },
    "1700": {
      "op": "DUP2"
    },
    "1701": {
      "op": "MLOAD"
    },
    "1702": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1704": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1706": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1708": {
      "op": "SHL"
    },
    "1709": {
      "op": "SUB"
    },
    "1710": {
      "op": "DUP2"
    },
    "1711": {
      "op": "AND"
    },
    "1712": {
      "op": "DUP2"
    },
    "1713": {
      "op": "EQ"
    },
    "1714": {
      "op": "PUSH2",
      "value": "0x68A"
    },
    "1717": {
      "op": "JUMPI"
    },
    "1718": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1720": {
      "op": "DUP1"
    },
    "1721": {
      "op": "REVERT"
    }
  },
  "sha1": "969e5a4027e62ba3597d619f9d530604147d10d5",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/INFTSeller.sol\";\nimport \"./NexidToken.sol\";\nimport \"./NexidNFT.sol\";\n\n\n/**\n * @title The NFT seller\n * @notice The NFTSeller allows the sale of ERC721 tokens for ERC20 tokens\n */\nabstract contract NFTSeller is INFTSeller {\n  address payable owner;\n  NexidToken public nexidToken;\n  NexidNFT public nexidNFT;\n  uint256 public price;\n\n  /**\n   * @param _nexidToken NexidToken.sol address\n   * @param _nexidNFT NexidNFT.sol address\n   * @param _price NexidNFT priced in NexidToken\n   */\n  constructor(NexidToken _nexidToken, NexidNFT _nexidNFT, uint256 _price) {\n    owner = payable(msg.sender);\n    nexidToken = _nexidToken;\n    nexidNFT = _nexidNFT;\n    price = _price;\n  }\n\n  /// @inheritdoc INFTSeller\n  function purchase(uint256 tokenId)\n    external\n    override\n    onlyNexidNFTAvailable(tokenId)\n    onlyNexidTokenApproved()\n    onlySufficientBalance()\n  {\n    nexidToken.transferFrom(msg.sender, address(this), price);\n    nexidNFT.transferFrom(address(this), msg.sender, tokenId);\n    emit ItemPurchased(msg.sender, tokenId);\n  }\n\n  /// @inheritdoc INFTSeller\n  function withdraw(uint256 amount)\n    external\n    override\n    onlyOwner()\n    onlyAvailableBalance(amount)\n  {\n    nexidToken.transfer(owner, amount);\n    emit FundsWithdrawn(owner, amount);\n  }\n\n  /**\n   * @dev Allows execution only if the provided token ID belongs to the NFTSeller\n   *\n   * @param tokenId The token ID of the NFT\n   */\n  modifier onlyNexidNFTAvailable(uint256 tokenId) {\n    require(\n      nexidNFT.ownerOf(tokenId) == address(this),\n      \"NFT not for sale.\"\n    );\n    _;\n  }\n\n  /// @dev Allows execution only if the NFTSeller is allowed to spend caller's Nexid tokens\n  modifier onlyNexidTokenApproved() {\n    require(\n      nexidToken.allowance(msg.sender, address(this)) >= price,\n      \"NexidToken not approved.\"\n    );\n    _;\n  }\n\n  /// @dev Allows execution only if the caller has a sufficient Nexid token balance\n  modifier onlySufficientBalance() {\n    require(\n      nexidToken.balanceOf(msg.sender) >= price,\n      \"Not enough Nexid tokens.\"\n    );\n    _;\n  }\n\n  /// @dev Allows execution only if the caller is the owner\n  modifier onlyOwner() {\n    require(\n      msg.sender == owner,\n      \"Only owner can call this function.\"\n    );\n    _;\n  }\n\n  /**\n   * @dev Allows execution only if the NFTSeller has at least the provided amount of Nexid tokens.\n   *\n   * @param amount The amount provided for withdrawal\n   */\n  modifier onlyAvailableBalance(uint256 amount) {\n    require(\n      amount <= nexidToken.balanceOf(address(this)),\n      \"The amount exceeds the available balance.\"\n    );\n    _;\n  }\n}\n\n\n/**\n * @title The seller of Nexid NFTs\n */\ncontract NexidSeller is NFTSeller {\n  /*\n   * @param nexidToken NexidToken.sol address\n   * @param nexidNFT NexidNFT.sol address\n   * @param price NexidNFT priced in NexidToken\n   */\n  constructor(NexidToken nexidToken, NexidNFT nexidNFT, uint256 price) NFTSeller(nexidToken, nexidNFT, price) {}\n}\n",
  "sourceMap": "2731:297:16:-:0;;;2916:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;643:5;:27;;-1:-1:-1;;;;;;643:27:16;;;659:10;643:27;;;;;676:24;;-1:-1:-1;;;;;676:24:16;;;;;;;;;706:8;:20;;;;;;;;;;;;;;732:5;:14;2731:297;;14:143:19;-1:-1:-1;;;;;101:31:19;;91:42;;81:70;;147:1;144;137:12;81:70;14:143;:::o;162:504::-;284:6;292;300;353:2;341:9;332:7;328:23;324:32;321:52;;;369:1;366;359:12;321:52;401:9;395:16;420:43;457:5;420:43;:::i;:::-;532:2;517:18;;511:25;482:5;;-1:-1:-1;545:45:19;511:25;545:45;:::i;:::-;609:7;599:17;;;656:2;645:9;641:18;635:25;625:35;;162:504;;;;;:::o;:::-;2731:297:16;;;;;;",
  "sourcePath": "contracts/NexidSeller.sol",
  "type": "contract"
}